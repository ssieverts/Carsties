networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16
services:
  mssql:
    container_name: mssql-server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "yourStrongRocks9151"
    image: mcr.microsoft.com/mssql/server:latest
    ports:
      - 1433:1433
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P yourStrongRocks9151 -Q 'SELECT 1' || exit 1",
        ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    volumes:
      - /var/opt/mssql
    networks:
      custom:
  mongodb:
    container_name: mongoDb
    image: mongodb/mongodb-community-server:5.0-ubuntu2004
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - /var/lib/mongodb/data
    networks:
      custom:
  rabbitmq:
    container_name: rabbitMq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom:
  auction-svc:
    image: dotnetlearning/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Data Source=mssql,1433;User ID=sa;Password=yourStrongRocks9151;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False;Database=Auction
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:80
    ports:
      - 7001:80
      - 7777:7777
    networks:
      custom:
    depends_on:
      - mssql
      - rabbitmq
      - identity-svc
  search-svc:
    image: dotnetlearning/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb:27017/?authSource=admin&readPreference=primary&ssl=false&directConnection=true
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    networks:
      custom:
    depends_on:
      - mongodb
      - rabbitmq
      - identity-svc
      - auction-svc
  identity-svc:
    image: dotnetlearning/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=http://app.carsties.com
      - ConnectionStrings__DefaultConnection=Data Source=mssql,1433;User ID=sa;Password=yourStrongRocks9151;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False;Database=Identity
      - VIRTUAL_HOST=id.carsties.com
    networks:
      custom:
        ipv4_address: 10.5.0.200
    depends_on:
      - mssql
      - mongodb
      - rabbitmq
  gateway-svc:
    image: dotnetlearning/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=https://app.carsties.com
      - VIRTUAL_HOST=api.carsties.com
    networks:
      custom:
    depends_on:
      - identity-svc
  bid-svc:
    image: dotnetlearning/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopw@mongodb:27017/?authSource=admin&readPreference=primary&ssl=false&directConnection=true
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    networks:
      custom:
    depends_on:
      - mongodb
      - rabbitmq
  notify-svc:
    image: dotnetlearning/notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    networks:
      custom:
    depends_on:
      - rabbitmq
  web-app:
    image: trycatchlearn/web-app
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    extra_hosts:
      - id.carsties.com:10.5.0.200
    environment:
      - NEXTAUTH_SECRET=somethingreallyreallysecret
      - NEXTAUTH_URL=http://app.carsties.com
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc/
      - ID_URL=http://id.carsties.com
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - VIRTUAL_HOST=app.carsties.com
      - VIRTUAL_PORT=3000
    networks:
      custom:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./devcerts:/etc/nginx/certs
